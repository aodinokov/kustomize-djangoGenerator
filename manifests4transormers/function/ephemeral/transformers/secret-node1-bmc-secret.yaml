apiVersion: someteam.example.com/v1
kind: JinjaTransformer
metadata:
  name: function-ephemeral-secret
jinjaTemplate: |
  {% set source = resources[fn.filter_getMatchingIndexes(resources,
                fn.filter_operatorAnd(
                        fn.filter_fieldEqual("kind", "VariableCatalogue"),
                        fn.filter_fieldEqual("metadata/name", "function-ephemeral-catalogue")
                ))[0]] %}
  {{ 
        resources | 
        filter_modifyMatching(
                fn.filter_operatorAnd(
                        fn.filter_fieldEqual("kind", "Secret"),
                        fn.filter_fieldEqual("metadata/name", "node1-bmc-secret")
                ),
                fn.modify_byPath(
                        "stringData/userData|write_files/0/content|clusters/0/cluster/certificate-authority-data",
                        fn.operation_set(
                                "{}".format(source.data.kubernetes.get("ca-cert"))
                        )
                ),
                fn.modify_byPath(
                        "stringData/userData|write_files/1/content",
                        fn.operation_set(
                                "{}".format(source.data.kubernetes.get("ca-cert"))
                        )
                ),
                fn.modify_byPath(
                        "stringData/userData|write_files/2/content",
                        fn.operation_set(
                                "{}".format(source.data.kubernetes.get("ca-key"))
                        )
                ),
                fn.modify_byPath(
                        "stringData/userData|write_files/0/content|users/0/user/client-certificate-data",
                        fn.operation_set(
                                "{}".format(source.data.kubernetes.get("client-cert"))
                        )
                ),
                fn.modify_byPath(
                        "stringData/userData|write_files/0/content|users/0/user/client-key-data",
                        fn.operation_set(
                                "{}".format(source.data.kubernetes.get("client-key"))
                        )
                ),

        ) |
        yaml_dump(_all=True)
  }}
